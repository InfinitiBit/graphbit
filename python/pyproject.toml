[build-system]
build-backend = "maturin"
requires = ["maturin>=1.0,<2.0"]

[project]
authors = [
  {name = "GraphBit Team", email = "team@graphbit.ai"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Rust",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Distributed Computing",
  "Topic :: Office/Business :: Scheduling",
  "Typing :: Typed"
]
description = "Production-grade Python bindings for GraphBit agentic workflow automation framework"
documentation = "https://docs.graphbit.ai/"
dynamic = []
homepage = "https://graphbit.ai/"
keywords = [
  "ai",
  "agents",
  "workflow",
  "automation",
  "llm",
  "rust",
  "performance",
  "agentic",
  "orchestration",
  "multi-agent"
]
name = "graphbit"
readme = "README.md"
repository = "https://github.com/InfinitiBit/graphbit"
requires-python = ">=3.10"
version = "0.4.0"

[project.urls]
"Bug Reports" = "https://github.com/InfinitiBit/graphbit/issues"
"Changelog" = "https://github.com/InfinitiBit/graphbit/blob/main/CHANGELOG.md"
"Discord" = "https://discord.gg/8TvUK6uf"
"Documentation" = "https://docs.graphbit.ai/"
"Homepage" = "https://graphbit.ai/"
"Repository" = "https://github.com/InfinitiBit/graphbit"
"Roadmap" = "https://docs.google.com/spreadsheets/d/1deQk0p7cCJUeeZw3t8FimxVg4jc99w0Bw1XQyLPN0Zk/edit?usp=sharing"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod"
]

# Coverage configuration
[tool.coverage.run]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*"
]
source = ["graphbit"]

[tool.maturin]
# Auditwheel configuration for Linux wheels
auditwheel = "repair"
# PyO3 bindings configuration
bindings = "pyo3"
# Compatibility settings for PyPI distribution
compatibility = "pypi"
# Module configuration
module-name = "graphbit"
# Build profile for optimized releases
profile = "release"
# Build optimizations
strip = true

[tool.maturin.sdist]
# Exclude build artifacts and temporary files
exclude = [
  "target/**/*",
  "**/__pycache__/**/*",
  "**/*.pyc",
  "**/*.pyo",
  "**/.pytest_cache/**/*",
  "**/node_modules/**/*",
  "**/.DS_Store",
  "**/.git/**/*"
]
# Include necessary source files for source distribution
include = [
  "src/**/*",
  "Cargo.toml",
  "README.md",
  "../core/src/**/*",
  "../core/Cargo.toml",
  "../core/README.md"
]

# Type checking configuration
[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
python_version = "0.4.0"
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# Development and testing configuration
[tool.pytest]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config",
  "--cov=graphbit",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml"
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests"
]
minversion = "0.4.0"
python_classes = ["Test*"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

# Ruff linting configuration
[tool.ruff]
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901"  # too complex
]
line-length = 88
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP"  # pyupgrade
]
target-version = "0.4.0"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]
