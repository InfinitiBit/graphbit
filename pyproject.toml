[build-system]
build-backend = "maturin"
requires = ["maturin>=1.0,<2.0"]

[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101", "B601"]

# Tool configurations
[tool.black]
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | target
)/
'''
include = '\.pyi?$'
line-length = 200
target-version = ['py310']

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod"
]

[tool.coverage.run]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
  "*/site-packages/*"
]
source = ["graphbit"]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["graphbit"]
line_length = 200
multi_line_output = 3
profile = "black"
skip_gitignore = true
use_parentheses = true

[tool.maturin]
# PyO3 bindings configuration
bindings = "pyo3"
# Compatibility settings for PyPI distribution
compatibility = "pypi"
# Module configuration
module-name = "graphbit"
# Build profile for optimized releases
profile = "release"
# Skip auditwheel for root builds (problematic configuration)
skip-auditwheel = true
# Build optimizations
strip = true

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
python_version = "3.10"
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
authors = ["GraphBit Team"]
description = "GraphBit - Advanced workflow automation and AI agent orchestration library"
homepage = "https://github.com/InfinitiBit/graphbit"
name = "graphbit"
package-mode = true
readme = "README.md"
repository = "https://github.com/InfinitiBit/graphbit"
version = "0.4.0"

[tool.poetry.dependencies]
# Core dependencies - minimal for framework functionality
aiofiles = ">=23.0.0"
# Optional AI/ML dependencies
anthropic = {version = ">=0.24.0", optional = true}
# Vector database dependencies
astrapy = {version = ">=1.0.0", optional = true}
boto3 = {version = ">=1.26.0", optional = true}
# Optional benchmarking dependencies
chromadb = {version = ">=0.4.0", optional = true}
click = {version = "^8.2.1", optional = true}
crewai = {version = ">=0.41.0", optional = true}
elasticsearch = {version = ">=8.0.0", optional = true}
faiss-cpu = {version = ">=1.7.0", optional = true}
ibm-db = {version = ">=3.1.0", optional = true}
langchain = {version = ">=0.1.0", optional = true}
langchain-anthropic = {version = "^0.3.19", optional = true}
langchain-ollama = {version = "^0.3.7", optional = true}
langchain-openai = {version = ">=0.1.0", optional = true}
langgraph = {version = ">=0.1.0", optional = true}
llama-index = {version = ">=0.9.0", optional = true}
llama-index-cli = {version = "^0.5.0", optional = true}
llama-index-llms-anthropic = {version = "^0.8.5", optional = true}
llama-index-llms-ollama = {version = "^0.7.1", optional = true}
mariadb = {version = ">=1.1.0", optional = true}
matplotlib = {version = ">=3.7.0", optional = true}
memory-profiler = {version = ">=0.61.0", optional = true}
numpy = {version = ">=1.24.0", optional = true}
openai = {version = ">=1.30.0", optional = true}
pandas = {version = ">=2.0.0", optional = true}
pinecone = {version = ">=4.0.0", optional = true}
# Benchmarking specific dependencies
psutil = {version = ">=5.9.0", optional = true}
psycopg2 = {version = ">=2.9.0", optional = true}
pydantic-ai = {version = ">=0.0.5", optional = true}
pymilvus = {version = ">=2.3.0", optional = true}
pymongo = {version = ">=4.0.0", optional = true}
python = ">=3.10,<3.13"
python-dotenv = ">=1.0.0"
qdrant-client = {version = ">=1.7.0", optional = true}
requests = {version = ">=2.25.0", optional = true}
rich = ">=13.0.0"
seaborn = {version = ">=0.12.0", optional = true}
tabulate = {version = ">=0.9.0", optional = true}
typer = ">=0.9.0"
types-pyyaml = {version = "^6.0.12.20250822", optional = true}
weaviate-client = {version = ">=4.4.0", optional = true}

# Optional dependency groups for pip install
[tool.poetry.extras]
astradb = ["astrapy"]
benchmark = [
  "click",
  "matplotlib",
  "numpy",
  "pandas",
  "psutil",
  "seaborn",
  "tabulate",
  "memory-profiler",
  "anthropic",
  "openai",
  "langchain",
  "langchain-openai",
  "langchain-anthropic",
  "langchain-ollama",
  "langgraph",
  "llama-index",
  "llama-index-llms-anthropic",
  "llama-index-cli",
  "crewai",
  "pydantic-ai"
]
boto3 = ["boto3"]
chromadb = ["chromadb"]
db2 = ["ibm-db", "numpy"]
elasticsearch = ["elasticsearch"]
faiss = ["faiss-cpu", "numpy"]
full = [
  "click",
  "matplotlib",
  "numpy",
  "pandas",
  "psutil",
  "seaborn",
  "tabulate",
  "memory-profiler",
  "anthropic",
  "openai",
  "langchain",
  "langchain-openai",
  "langchain-anthropic",
  "langchain-ollama",
  "langgraph",
  "llama-index",
  "llama-index-llms-anthropic",
  "llama-index-cli",
  "crewai",
  "pydantic-ai",
  "astrapy",
  "boto3",
  "chromadb",
  "elasticsearch",
  "faiss-cpu",
  "ibm-db",
  "mariadb",
  "pinecone",
  "psycopg2",
  "pymilvus",
  "pymongo",
  "qdrant-client",
  "requests",
  "weaviate-client",
  "types-pyyaml"
]
mariadb = ["mariadb", "numpy"]
milvus = ["pymilvus"]
mongodb = ["pymongo"]
pgvector = ["psycopg2"]
pinecone = ["pinecone"]
qdrant = ["qdrant-client"]
requests = ["requests"]
weaviate = ["weaviate-client"]

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.0"
# Code quality tools
black = "^24.3.0"
detect-secrets = "^1.4.0"
flake8 = "^6.0.0"
flake8-bugbear = "^23.0.0"
flake8-comprehensions = "^3.14.0"
flake8-docstrings = "^1.7.0"
flake8-simplify = "^0.20.0"
isort = "^5.12.0"
maturin = "^1.8.6"
mypy = "^1.0.0"
pre-commit = "^3.6.0"
pytest = ">=7.0.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.0.0"
requests = ">=2.25.0"
safety = "^2.3.0"
types-pyyaml = "^6.0.12.20250822"

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --strict-config"
minversion = "7.0"
python_files = [
  "test_*.py",
  "tests_*.py",
  "*_test.py"
]
testpaths = [
  "tests"
]
