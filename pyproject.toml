[build-system]
build-backend = "maturin"
requires = ["maturin>=1.0,<2.0"]

[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101", "B601"]

# Tool configurations
[tool.black]
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | target
)/
'''
include = '\.pyi?$'
line-length = 200
target-version = ['py310']

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod"
]

[tool.coverage.run]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
  "*/site-packages/*"
]
source = ["graphbit"]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["graphbit"]
line_length = 200
multi_line_output = 3
profile = "black"
skip_gitignore = true
use_parentheses = true

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
python_version = "3.10"
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
authors = ["GraphBit Team"]
description = "GraphBit - Advanced workflow automation and AI agent orchestration library"
homepage = "https://github.com/InfinitiBit/graphbit"
license = "proprietary"
name = "graphbit"
package-mode = false
readme = "README.md"
repository = "https://github.com/InfinitiBit/graphbit"
version = "0.1.0"

[tool.poetry.dependencies]
aiofiles = ">=23.0.0"
anthropic = ">=0.24.0"
astrapy = {version = ">=1.0.0", optional = true}
azure-cosmos = {version = ">=4.5.0", optional = true}
azure-storage-blob = {version = ">=12.19.0", optional = true}
# Cloud Providers
boto3 = {version = ">=1.34.0", optional = true}
chromadb = {version = ">=0.4.0", optional = true}
click = "^8.2.1"
crewai = ">=0.41.0"
elasticsearch = {version = ">=8.11.0", optional = true}
faiss-cpu = {version = ">=1.7.0", optional = true}
# Search Engines
google-api-python-client = {version = ">=2.108.0", optional = true}
google-cloud-firestore = {version = ">=2.13.0", optional = true}
google-cloud-storage = {version = ">=2.10.0", optional = true}
ibm-db = {version = ">=3.2.0", optional = true}
# Core AI/ML dependencies
langchain = ">=0.1.0"
langchain-openai = ">=0.1.0"
langgraph = ">=0.1.0"
llama-index = ">=0.9.0"
mariadb = {version = ">=1.1.0", optional = true}
maturin = "^1.8.6"
openai = ">=1.30.0"
pgvector = {version = ">=0.2.0", optional = true}
# Optional dependencies for extensions
# Vector Databases
pinecone-client = {version = ">=3.0.0", optional = true}
psycopg2-binary = {version = ">=2.9.0", optional = true}
pydantic-ai = ">=0.0.5"
pymilvus = {version = ">=2.3.0", optional = true}
# Traditional Databases
pymongo = {version = ">=4.6.0", optional = true}
python = ">=3.10,<3.13"
# Utility dependencies
python-dotenv = ">=1.0.0"
qdrant-client = {version = ">=1.7.0", optional = true}
rich = ">=13.0.0"
typer = ">=0.9.0"
weaviate-client = {version = ">=4.4.0", optional = true}

[tool.poetry.extras]
# Install all extensions
all = [
  "pinecone-client",
  "qdrant-client",
  "weaviate-client",
  "chromadb",
  "pymilvus",
  "faiss-cpu",
  "astrapy",
  "pymongo",
  "psycopg2-binary",
  "pgvector",
  "mariadb",
  "ibm-db",
  "elasticsearch",
  "boto3",
  "azure-storage-blob",
  "azure-cosmos",
  "google-cloud-storage",
  "google-cloud-firestore",
  "google-api-python-client"
]
astradb = ["astrapy"]
# Cloud Provider Extensions
aws_boto3 = ["boto3"]
azure = ["azure-storage-blob", "azure-cosmos"]
chromadb = ["chromadb"]
cloud_providers = ["boto3", "azure-storage-blob", "azure-cosmos", "google-cloud-storage", "google-cloud-firestore"]
db2 = ["ibm-db"]
elasticsearch = ["elasticsearch"]
faiss = ["faiss-cpu"]
google_cloud_platform = ["google-cloud-storage", "google-cloud-firestore"]
# Search Engine Extensions
google_search_api = ["google-api-python-client"]
mariadb = ["mariadb"]
milvus = ["pymilvus"]
pgvector = ["psycopg2-binary", "pgvector"]
# Vector Database Extensions
pinecone = ["pinecone-client"]
# Traditional Database Extensions
pymongo = ["pymongo"]
qdrant = ["qdrant-client"]
search_engines = ["google-api-python-client"]
traditional_databases = ["pymongo", "psycopg2-binary", "pgvector", "mariadb", "ibm-db", "elasticsearch"]
# Convenience groups
vector_databases = ["pinecone-client", "qdrant-client", "weaviate-client", "chromadb", "pymilvus", "faiss-cpu", "astrapy"]
weaviate = ["weaviate-client"]

[tool.poetry.group.benchmarks.dependencies]
matplotlib = ">=3.7.0"
memory-profiler = ">=0.61.0"
numpy = ">=1.24.0"
pandas = ">=2.0.0"
# Benchmarking specific dependencies
psutil = ">=5.9.0"
seaborn = ">=0.12.0"
tabulate = ">=0.9.0"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.0"
# Code quality tools
black = "^24.3.0"
detect-secrets = "^1.4.0"
flake8 = "^6.0.0"
flake8-bugbear = "^23.0.0"
flake8-comprehensions = "^3.14.0"
# Additional flake8 plugins
flake8-docstrings = "^1.7.0"
flake8-simplify = "^0.20.0"
isort = "^5.12.0"
mypy = "^1.0.0"
# Pre-commit
pre-commit = "^3.6.0"
# Development dependencies
pytest = ">=7.0.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.0.0"
safety = "^2.3.0"

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --strict-config"
minversion = "7.0"
python_files = [
  "test_*.py",
  "tests_*.py",
  "*_test.py"
]
testpaths = [
  "tests"
]
